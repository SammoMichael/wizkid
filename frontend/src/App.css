/* <span class="token keyword">function</span><span class="token function">binarySearch</span><span class="token punctuation">(</span><span class="token parameter">ar<span class="token punctuation">, </span> el<span class="token punctuation">, </span> compare_fn</span><span class="token punctuation">)</span><span class="token punctuation"> {
  </span><span class="token keyword">var</span>m <span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;
  </span><span class="token keyword">var</span>n <span class="token operator">=</span>ar<span class="token punctuation">.</span>length <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;
  </span><span class="token keyword">while</span><span class="token punctuation">(</span>m <span class="token operator">&lt;

  =</span> n<span class="token punctuation">)</span><span class="token punctuation"> {
    </span><span class="token keyword">var</span>k <span class="token operator">=</span><span class="token punctuation">(</span>n <span class="token operator">+</span> m<span class="token punctuation">)</span><span class="token operator">>></span><span class="token number">1</span><span class="token punctuation">;
    </span><span class="token keyword">var</span>cmp <span class="token operator">=</span><span class="token function">compare_fn</span><span class="token punctuation">(</span>el<span class="token punctuation">, </span> ar<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;

    </span><span class="token keyword">if</span><span class="token punctuation">(</span>cmp <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation"> {
      </span>m <span class="token operator">=</span>k <span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;
      </span><span class="token punctuation">
    }

    </span><span class="token keyword">else</span><span class="token keyword">if</span><span class="token punctuation">(</span>cmp <span class="token operator">&lt;

    </span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation"> {
      </span>n <span class="token operator">=</span>k <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;
      </span><span class="token punctuation">
    }

    </span><span class="token keyword">else</span><span class="token punctuation"> {
      </span><span class="token keyword">return</span>k<span class="token punctuation">;
      </span><span class="token punctuation">
    }

    </span><span class="token punctuation">
  }

  </span><span class="token keyword">return</span><span class="token operator">-</span>m <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;
  </span><span class="token punctuation">
}

</span><span class="token keyword">function</span><span class="token function">compare_number</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">, </span> b</span><span class="token punctuation">)</span><span class="token punctuation"> {
  </span><span class="token keyword">return</span>a <span class="token operator">-</span>b<span class="token punctuation">;
  </span><span class="token punctuation">
} */

/* </span> */
.Over {
  
}
.Won {
bottom: 100px;
position: relative;
}

.ending {
  position: relative;
  left: 100px;
  color: yellow;
  letter-spacing: 5px;
  position: absolute;
  font-family: 'Luckiest Guy', cursive;
  font-size: 60px;
  visibility: hidden;
}
.bg {
  /* background: url(./dark.svg) no-repeat center center; */
  height: 100vh;
  width: 100vw;
  display: flex;
  align-self: center;
}
.flower {
  height: 125px;
  width: 125px;
  position: relative;
  right: 70px;
  bottom: 20px;
  /* top: 10px; */
  /* left: 90px; */
}
.right {
display: flex;
flex-direction: row;
position: relative;
right: 200px;

}
.rock {
  height: 70px;
  width: 70px;
  visibility: hidden;
}
.rock2 {
  height: 70px;
  width: 70px;
  visibility: hidden;
  position: relative;
}
.gameOver {
  /* position: absolute;
  right: 200px;
  bottom: 200px;
  width: 500px;
  height: 500px; */
}
.island {
  display: flex;
  flex-direction: row;
  align-self: flex-end;
  height: 200px;
  width: 200px;
  position: relative;
  bottom: 10px;
  right: 200px;
}

.full-heart1{
  height: 40px;
  background: url(./empty-heart.png) no-repeat;
}
.full-heart2{
  height: 40px;
  background: url(./empty-heart.png) no-repeat;
}
.full-heart3{
  height: 40px;
  background: url(./empty-heart.png) no-repeat;
}
.full-heart4{
  height: 40px;
  background: url(./empty-heart.png) no-repeat;
}
.full-heart5{
  height: 40px;
  background: url(./empty-heart.png) no-repeat;
}
.full-heart6{
  height: 40px;
  background: url(./empty-heart.png) no-repeat;
}
.full-heart{
  height: 40px;
  background: url(./empty-heart.png) no-repeat;
}
.island2 {
  z-index: 10;
  display: flex;
  flex-direction: row;
  align-self: flex-end;
  height: 200px;
  width: 200px;
  position: relative;
  left: 250px;
}
.island5 {
  display: flex;
  flex-direction: row;
  align-self: flex-end;
  height: 200px;
  width: 200px;
  position: relative;
  /* left: 650px; */

}
.island3 {
  bottom: 60px;
  display: flex;
  flex-direction: row;
  align-self: flex-end;
  height: 200px;
  width: 200px;
  position: relative;
  left: 150px;
  /* bottom: 60px; */
}
.island4 {
  bottom: 60px;
  display: flex;
  flex-direction: row;
  align-self: flex-end;
  height: 200px;
  width: 200px;
  position: relative;
  left: 150px;
  /* bottom: 60px; */
}
.clock {
  bottom: 100;
  height: 50px;
  width: 50px;
  position: relative;
  right: 400px;
}
.monster {
  z-index: 10;
  display: flex;
  flex-direction: row;
  align-self: center;
  height: 170px;
  /* width: 120px; */
  bottom: 80px;
  margin-left: 100px;
  position: relative;
  /* animation: App-logo-spin infinite 2s ease-out; */
}
.monster2 {
  display: flex;
  flex-direction: row;
  align-self: center;
  height: 200px;
  /* width: 150px; */
  bottom: 140px;
  right: 100px;

  /* left: 400px; */
  position: relative;


}
.dying {
  animation: App-logo-spin 2s ease-out forwards;

}
.App {
  background: url(./dark.svg) no-repeat center center;
  /* background: url(./bg-night.svg) no-repeat center center; */

}
html, body {
  height: 100vh;
  width: 100vw;
  background: url(./dark.svg) no-repeat center center;
  background: url(./dark.svg) no-repeat center center;
  height: 100vh;
  width: 100vw;
  overflow: hidden;
  
}
.rock {
position: relative;
align-self: center;
/* left: 200px; */
}
.speed {
  min-width: 50px;
  min-height: 50px;
  /* margin: 50px; */
  font-family: "Roboto";
  font-size: 50px;
  border-bottom: 10px solid aqua;

}

.feedback{
  display: flex;
  flex: 1;
  flex-direction: column-reverse;
  color: white;
  background-color: #2d3436;
  background-image: linear-gradient(315deg, #2d3436 0%, #000000 74%);
  background-color: #166d3b;
  background-image: linear-gradient(147deg, #166d3b 0%, #000000 74%);
}
.errors{ 
  display: flex;
  flex-direction: column;
  color: yellow;
}
.timer-box {
  bottom: 50;
  position: relative;
  right: 935px;
  font-family: 'Short Stack', cursive;
  font-size: 36px;

}
.timer {
  min-height: 45px;
  min-width: 100px;
  /* margin: 150px; */
}
.text {
  /* background: url(./bg-morning.svg) no-repeat center center; */
  margin-top: 50px;
  margin-left: 50px;
  margin-bottom: 50px;
  letter-spacing: 3px;
  overflow: scroll;
  /* margin: 50px; */
  display: flex;
  /* font-family: 'Henny Penny', cursive; */
  font-family: 'Short Stack', cursive;

  height: 93vh;
  width: 100vw;
  /* margin: 500px; */
  font-size: 40px;
   white-space: pre-wrap;
   text-align: left;

}
.parameter {
  color: pink;
}
.highlight {
  font-size: 45px;
  background-color:rgb(40, 50, 180);
  opacity: 1;
  border: rgb(40, 50, 180) solid 5px;
}
.error {
  font-size: 45px;
  opacity: 1;
  border: red solid 5px;
  background-color: red;
}


.App {
  /* background-image: image('./bg-morning'); */
  display: flex;    
  flex-direction: column;
  background-color: #2d3436;
  background-image: linear-gradient(315deg, #2d3436 0%, #000000 74%);
  text-align: center;
  height: 100vh;
  width: 100vw;
  color: white;
    background: url(./dark.svg) no-repeat center center;

}

.App-logo {
  animation: App-logo-spin infinite 20s linear;
  height: 40vmin;
  pointer-events: none;
}
.punctuation {
  color: green;
}

.operator {
  color: purple;
}
.keyword {
  color: red;
}

.function {
  color: orange;
}
.App-header {
  background-color: #282c34;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 2vmin);
  color: white;
}

.App-link {
  color: #61dafb;
}

@keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }
  /* to {
    transform: rotate(360deg) scale(2);
    /* transform:  */
  /* }  */
  to {
    transform: rotate(360deg) scale(0);
    /* transform:  */
  }
  to {
    visibility: hidden;
  }
}
